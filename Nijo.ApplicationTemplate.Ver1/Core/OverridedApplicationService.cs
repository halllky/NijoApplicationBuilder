using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MyApp.Core;

public class OverridedApplicationService : AutoGeneratedApplicationService {
    public OverridedApplicationService(IServiceProvider serviceProvider) : base(serviceProvider) {
    }

    /// <summary>
    /// ユーザー1人が特定のCommand/Queryモデルに対して持っている権限レベルを返す
    /// </summary>
    public E_AuthLevel GetAuthLevel(E_CommandQueryType modelType) {
        return E_AuthLevel.Writable; // 特にロジックなし
    }

    public override Task<参照先一括更新ReturnType> Execute(参照先一括更新Parameter param, IPresentationContext<参照先一括更新ParameterMessages> context) {
        throw new NotImplementedException();
    }

    protected override IQueryable<参照先SearchResult> CreateQuerySource(参照先SearchCondition searchCondition, IPresentationContext<参照先Messages> context) {
        throw new NotImplementedException();
    }
}

/// <summary>
/// ユーザー1人が特定のCommand/Queryモデルに対して持っている権限レベル
/// </summary>
public enum E_AuthLevel {
    /// <summary>権限なし</summary>
    None = 0,
    /// <summary>参照権限あり、更新権限なし</summary>
    Readable = 1,
    /// <summary>参照権限・更新権限ともにあり</summary>
    Writable = 2,
}
