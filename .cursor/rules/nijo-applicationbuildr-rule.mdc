---
description: 
globs: 
alwaysApply: true
---
## 用語定義
- 「スキーマ定義」とは「nijo.xml」で定義されるデータ構造や各種オプション属性の定義を表します。
- 「ソースコード自動生成処理」とは、 [Nijo.csproj](mdc:Nijo/Nijo.csproj) プロジェクトおよびそこで実行される一連のソースコード生成処理を表します。
- 「アプリケーションテンプレート」とは、 [NIJO_APPLICATION_TEMPLATE.sln](mdc:Nijo.ApplicationTemplate.Ver1/NIJO_APPLICATION_TEMPLATE.sln) に属するソースコードを表します。

## 全般
- 参照しようとしているフォルダに `README.md` という名前のファイルがある場合、 `README.md` を参照してください。

## ソースコードを修正するとき
- ソースコードを修正するときは @.editorconfig を参考にしてください。
- @Nijo.csproj プロジェクトおよびそのプロジェクトに含まれるソースコードを修正するときは @CONTRIBUTING.md を参照してください。

## 動作確認をおこなうとき
- 実装した結果が正しいかを確認するときは [run-for-cursor-agent.ps1](mdc:Nijo.IntegrationTest/run-for-cursor-agent.ps1) を使用してください。
- 全パターンではなく `Nijo.IntegrationTest/DataPatterns` にある特定のパターンのみテストする場合は `run-for-cursor-agent.ps1 000_単純な集約` のように拡張子抜きのxmlファイル名を指定してください。
- [run-for-cursor-agent.ps1](mdc:Nijo.IntegrationTest/run-for-cursor-agent.ps1) の詳細な結果は [DataPatternTest_Results.trx](mdc:Nijo.IntegrationTest/TestResults/DataPatternTest_Results.trx) に出力されています。エラーの詳細を確認する際はまずこのファイルを確認してください。
- 結果は以下の情報を報告してください。
  - パターン。 `Nijo.IntegrationTest/DataPatterns` のパターンのXMLごとに、そのXMLのテストが成功したか失敗したかを報告してください。
  - フェーズ。失敗した場合、以下のどのフェーズで失敗したかを報告してください。
    1. コード自動生成
    2. C#のコンパイルエラーチェック
    3. TypeScriptエラーチェック
  - 原因の推測。エラーの原因が以下いずれに最も近いかを考えて報告してください。
    - `Nijo.IntegrationTest/Implementors` の実装が不足、または誤っていることによるエラー
    - 生成されたソースコードが、そのモデルのモジュールから生成されるオブジェクトのデータ構造と矛盾していることによるエラー
    - 生成されるソースコードが、そのモデルの `HelpTextMarkdown` に記載されている仕様に違反していることによるエラー

