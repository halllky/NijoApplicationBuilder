import * as ReactHookForm from "react-hook-form"
import * as ReactRouter from "react-router-dom"
import { Panel, PanelGroup, PanelResizeHandle } from "react-resizable-panels"
import { ApplicationData } from "./types"
import { getDefaultSpecification } from "./DEFAULT_DATA"
import { Outliner, OutlinerItem } from "./ui-components"
import { UUID } from "uuidjs"

import "./index.css"

import 属性種類定義 from "./pages/属性種類定義"
import CommandModel定義 from "./pages/CommandModel定義"
import { DialogContextProvider } from "../__autoGenerated"
import トップページ from "./pages/トップページ"

export default function () {

  const router = ReactRouter.createBrowserRouter(
    ReactRouter.createRoutesFromElements(
      <ReactRouter.Route path="/"
        element={<ApplicationFrame />}
        children={(
          <>
            <ReactRouter.Route path="/" element={<トップページ />} />
            <ReactRouter.Route path="/member-types" element={<属性種類定義 />} />
            <ReactRouter.Route path="/command-model/:key0" element={<CommandModel定義 />} />
          </>
        )}
      />
    )
  )
  return (
    <ReactRouter.RouterProvider router={router} />
  )
}

const ApplicationFrame = () => {

  const form = ReactHookForm.useForm<ApplicationData>({
    defaultValues: getDefaultSpecification(),
  })
  const systemName = ReactHookForm.useWatch({ name: 'システム名', control: form.control })
  const commandModels = ReactHookForm.useFieldArray({ name: 'CommandModel定義', control: form.control })

  return (
    <ReactHookForm.FormProvider {...form}>
      <DialogContextProvider>
        <PanelGroup direction="horizontal" className="h-full w-full">
          <Panel className="flex flex-col bg-color-1 border-r border-color-3" defaultSize={20}>
            <ReactRouter.Link to="/" className="font-bold truncate min-h-4">{systemName}</ReactRouter.Link>
            <div className="basis-2"></div>
            <ReactRouter.Link to="/member-types" className="truncate">属性項目定義</ReactRouter.Link>
            {commandModels.fields.map(model => (
              <ReactRouter.Link key={model.uniqueId} to={`/command-model/${model.uniqueId}`} className="truncate">{model.表示名 ?? 'NO NAME'}</ReactRouter.Link>
            ))}
          </Panel>

          <PanelResizeHandle className="w-2" />

          <Panel>
            <ReactRouter.Outlet />
          </Panel>
        </PanelGroup>
      </DialogContextProvider>
    </ReactHookForm.FormProvider>
  )
}
